Combinatorial Bandits Revisited

Richard Combes M. Sadegh Talebi

Alexandre Proutiere Marc Lelarge

 Centrale-Supelec, L2S, Gif-sur-Yvette, FRANCE

 Department of Automatic Control, KTH, Stockholm, SWEDEN

 INRIA & ENS, Paris, FRANCE

richard.combes@supelec.fr,{mstms,alepro}@kth.se,marc.lelarge@ens.fr

Abstract
This paper investigates stochastic and adversarial combinatorial multi-armed bandit problems. In the stochastic setting under semi-bandit feedback, we derive a problem-specific regret lower bound, and discuss its scaling with the dimension of the decision space. We propose ESCB, an algorithm that efficiently exploits the structure of the problem and provide a finite-time analysis of its regret. ESCB has better performance guarantees than existing algorithms, and significantly outperforms these algorithms in practice. In the adversarial setting under bandit feedback, we propose COMBEXP, an algorithm with the same regret scaling as state-of-the-art algorithms, but with lower computational complexity for some combinatorial problems.

1 Introduction

Multi-Armed Bandits (MAB) problems [1] constitute the most fundamental sequential decision problems with an exploration vs. exploitation trade-off. In such problems, the decision maker selects an arm in each round, and observes a realization of the corresponding unknown reward distribution. Each decision is based on past decisions and observed rewards. The objective is to maximize the expected cumulative reward over some time horizon by balancing exploitation (arms with higher observed rewards should be selected often) and exploration (all arms should be explored to learn their average rewards). Equivalently, the performance of a decision rule or algorithm can be measured through its expected regret, defined as the gap between the expected reward achieved by the algorithm and that achieved by an oracle algorithm always selecting the best arm. MAB problems have found applications in many fields, including sequential clinical trials, communication systems, economics, see e.g. [2, 3].

In this paper, we investigate generic combinatorial MAB problems with linear rewards, as introduced

in [4]. In each round n  1, a decision maker selects an arm M from a finite set M  {0, 1}d and

receives a reward M X(n) =

d i=1

MiXi(n).

The reward vector X(n)



Rd+ is unknown.

We focus here on the case where all arms consist of the same number m of basic actions in the

sense that M 1 = m, M  M. After selecting an arm M in round n, the decision maker

receives some feedback. We consider both (i) semi-bandit feedback under which after round n, for

all i  {1, . . . , d}, the component Xi(n) of the reward vector is revealed if and only if Mi = 1; (ii)

bandit feedback under which only the reward M X(n) is revealed. Based on the feedback received

up to round n - 1, the decision maker selects an arm for the next round n, and her objective is to

maximize her cumulative reward over a given time horizon consisting of T rounds. The challenge in

these problems resides in the very large number of arms, i.e., in its combinatorial structure: the size

of M could well grow as dm. Fortunately, one may hope to exploit the problem structure to speed

up the exploration of sub-optimal arms.

We consider two instances of combinatorial bandit problems, depending on how the sequence of reward vectors is generated. We first analyze the case of stochastic rewards, where for all

1

Algorithm Regret

LLR

[9]

O

m3 dmax 2min

log(T )

CUCB

[10]

O

m2 d min

log(T )

CUCB [11]

O

md min

log(T )

ESCB

(Theorem 5)



O

md min

log(T )

Table 1: Regret upper bounds for stochastic combinatorial optimization under semi-bandit feedback.

i  {1, . . . , d}, (Xi(n))n1 are i.i.d. with Bernoulli distribution of unknown mean. The reward sequences are also independent across i. We then address the problem in the adversarial setting where the sequence of vectors X(n) is arbitrary and selected by an adversary at the beginning of the experiment. In the stochastic setting, we provide sequential arm selection algorithms whose performance exceeds that of existing algorithms, whereas in the adversarial setting, we devise simple algorithms whose regret have the same scaling as that of state-of-the-art algorithms, but with lower computational complexity.

2 Contribution and Related Work

2.1 Stochastic combinatorial bandits under semi-bandit feedback

Contribution. (a) We derive an asymptotic (as the time horizon T grows large) regret lower bound satisfied by any algorithm (Theorem 1). This lower bound is problem-specific and tight: there exists an algorithm that attains the bound on all problem instances, although the algorithm might be computationally expensive. To our knowledge, such lower bounds have not been proposed in the case of stochastic combinatorial bandits. The dependency in m and d of the lower bound is unfortunately not explicit. We further provide a simplified lower bound (Theorem 2) and derive its scaling in (m, d) in specific examples.

(gbr)etWscealpersoaptomseosEt SasCOB((Emffidcie-mn1itnSloagm(pTli)n)g(TfohreoCreommb5i)n, awtohreirael

Bandits), an algorithm whose remin denotes the expected reward

difference between the best and the second-best arm. ESCB assigns an index to each arm. The

index of given arm can be interpreted as performing likelihood tests with vanishing risk on its av-

erage reward. Our indexes are the natural extension of KL-UCB indexes defined for unstructured

bandits [5]. Numerical experiments for some specific combinatorial problems are presented in the

supplementary material, and show that ESCB significantly outperforms existing algorithms.

Related work. Previous contributions on stochastic combinatorial bandits focused on specific combinatorial structures, e.g. m-sets [6], matroids [7], or permutations [8]. Generic combinatorial problems were investigated in [9, 10, 11, 12]. The proposed algorithms, LLR and CUCB are variants of the UCB algorithm, and their performance guarantees arepresented in Table 1. Our algorithms improve over LLR and CUCB by a multiplicative factor of m.

2.2 Adversarial combinatorial problems under bandit feedback

Contribution.

We present algorithm COMBEXP,

O

m3T (d + m1/2-1) log -m1in ,

where

min

=

mini[d]

1 m|M|

whose regret is MM Mi and  is

the smallest nonzero eigenvalue of the matrix E[M M ] when M is uniformly distributed over M (Theorem 6). For most problems of interest m(d)-1 = O(1) [4] and -m1in = O(poly(d)), so that COMBEXP has O( m3dT log(d/m)) regret. A known regret lower bound is (m dT ) [13], so
the regret gap between COMBEXP and this lower bound scales at most as m1/2 up to a logarithmic
factor.

Related work. Adversarial combinatorial bandits have been extensively investigated recently, see [13] and references therein. Some papers consider specific instances of these problems, e.g., shortest-path routing [14], m-sets [15], and permutations [16]. For generic combinatorial problems, known regret lower bounds scale as  mdT and  m dT (if d  2m) in the case of semi-
bandit and bandit feedback, respectively [13]. In the case of semi-bandit feedback, [13] proposes

2

Algorithm Lower Bound [13]

 Regret  m dT , if d  2m

COMBAND [4]

O

m3dT

log

d m

1

+

2m d

EXP2 WITH JOHN'S EXPLORATION [18]

COMBEXP (Theorem 6)

O

O

m3dT

log

d m

m3dT

1

+

m1/2 d

log -m1in

Table 2: Regret of various algorithms for adversarial combinatorial bandits with bandit feedback. Note that for most combinatorial classes of interests, m(d)-1 = O(1) and -m1in = O(poly(d)).

OSMD, an algorithm whose regret upper bound matches the lower bound. [17] presents an algorithm with O(m dLT log(d/m)) regret where LT is the total reward of the best arm after T rounds.
For problems with bandit feedback, [4] proposes COMBAND and derives a regret upper bound which depends on the structure of action set M. For most problems of interest, the regret under COMBAND is upper-bounded by O( m3dT log(d/m)). [18] addresses generic linear optimization with bandit feedback and the proposed algorithm, referred to as EXP2 WITH JOHN'S EXPLORATION, has a regret scaling at most as O( m3dT log(d/m)) in the case of combinatorial structure. As we show next, for many combinatorial structures of interest (e.g. m-sets, matchings, spanning trees), COMBEXP yields the same regret as COMBAND and EXP2 WITH JOHN'S EXPLORATION, with lower computational complexity for a large class of problems. Table 2 summarises known regret bounds.

Example 1: m-sets. M is the set of all d-dimensional binary vectors with m non-zero coordinates.

We

have

min

=

m d

and



=

m(d-m) d(d-1)

(refer

to

the

supplementary

material

for

details).

Hence

when

m = o(d), the regret upper bound of COMBEXP becomes O( m3dT log(d/m)), which is the

same as that of COMBAND and EXP2 WITH JOHN'S EXPLORATION.

Example 2: matchings. The set of arms M is the set of perfect matchings in Km,m. d = m2 and

|M|

=

m!.

We

have

min

=

1 m

,

and



=

1 m-1

.

Hence the

regret

upper

bound

of

COMBEXP

is

O( m5T log(m)), the same as for COMBAND and EXP2 WITH JOHN'S EXPLORATION.

Example 3: spanning trees. M is the set of spanning trees in the complete graph KN . In this

case, N

d 2

= and

N m2 d

, m = N - 1, and by < 7 when N  6, The

Cayley's formula M has N N-2 arms. log -m1in  2N for regret upper bound of COMBAND and EXP2 WITH JOHN'S

EXPLORATION becomes O( N 5T log(N )). As for COMBEXP, we get the same regret upper

bound O( N 5T log(N )).

3 Models and Objectives
We consider MAB problems where each arm M is a subset of m basic actions taken from [d] = {1, . . . , d}. For i  [d], Xi(n) denotes the reward of basic action i in round n. In the stochastic setting, for each i, the sequence of rewards (Xi(n))n1 is i.i.d. with Bernoulli distribution with mean i. Rewards are assumed to be independent across actions. We denote by  = (1, . . . , d)   = [0, 1]d the vector of unknown expected rewards of the various basic actions. In the adversarial setting, the reward vector X(n) = (X1(n), . . . , Xd(n))  [0, 1]d is arbitrary, and the sequence (X(n), n  1) is decided (but unknown) at the beginning of the experiment.
The set of arms M is an arbitrary subset of {0, 1}d, such that each of its elements M has m basic actions. Arm M is identified with a binary column vector (M1, . . . , Md) , and we have M 1 = m, M  M. At the beginning of each round n, a policy , selects an arm M (n)  M based on the arms chosen in previous rounds and their observed rewards. The reward of arm M (n) selected in round n is i[d] Mi(n)Xi(n) = M (n) X(n).
3

We consider both semi-bandit and bandit feedbacks. Under semi-bandit feedback and policy , at the end of round n, the outcome of basic actions Xi(n) for all i  M (n) are revealed to the decision maker, whereas under bandit feedback, M (n) X(n) only can be observed.
Let  be the set of all feasible policies. The objective is to identify a policy in  maximizing the cumulative expected reward over a finite time horizon T . The expectation is here taken with respect to possible randomness in the rewards (in the stochastic setting) and the possible randomization in the policy. Equivalently, we aim at designing a policy that minimizes regret, where the regret of policy    is defined by:

TT

R(T ) = max E

M X(n) - E

M (n) X(n) .

M M

n=1

n=1

Finally, for the stochastic setting, we denote by M () = M  the expected reward of arm M , and let M ()  M, or M for short, be any arm with maximum expected reward: M () 
arg maxMM M (). In what follows, to simplify the presentation, we assume that the optimal M is unique. We further define:  () = M , min = minM=M M where M =  () - M (), and max = maxM ( () - M ()).

4 Stochastic Combinatorial Bandits under Semi-bandit Feedback

4.1 Regret Lower Bound

Given , define the set of parameters that cannot be distinguished from  when selecting action M (), and for which arm M () is suboptimal:
B() = {   : Mi ()(i - i) = 0, i,  () >  ()}.
We define X = (R+)|M| and kl(u, v) the Kullback-Leibler divergence between Bernoulli distributions of respective means u and v, i.e., kl(u, v) = u log(u/v) + (1 - u) log((1 - u)/(1 - v)). Finally, for (, )  2, we define the vector kl(, ) = (kl(i, i))i[d].
We derive a regret lower bound valid for any uniformly good algorithm. An algorithm  is uniformly good iff R(T ) = o(T ) for all  > 0 and all parameters   . The proof of this result relies on a general result on controlled Markov chains [19].

Theorem 1

For all 



, for any uniformly good policy 



,

lim infT 

R (T ) log(T )



c(),

where c() is the optimal value of the optimization problem:

inf
xX

xM (M () - M ) 

M M

s.t. xM M kl(, )  1 ,   B(). (1)
M M

Observe first that optimization problem (1) is a semi-infinite linear program which can be solved for any fixed , but its optimal value is difficult to compute explicitly. Determining how c() scales as a function of the problem dimensions d and m is not obvious. Also note that (1) has the following interpretation: assume that (1) has a unique solution x . Then any uniformly good algorithm must select action M at least xM log(T ) times over the T first rounds. From [19], we know that there exists an algorithm which is asymptotically optimal, so that its regret matches the lower bound of Theorem 1. However this algorithm suffers from two problems: it is computationally infeasible for large problems since it involves solving (1) T times, furthermore the algorithm has no finite time performance guarantees, and numerical experiments suggests that its finite time performance on typical problems is rather poor. Further remark that if M is the set of singletons (classical bandit), Theorem 1 reduces to the Lai-Robbins bound [20] and if M is the set of m-sets (bandit with multiple plays), Theorem 1 reduces to the lower bound derived in [6]. Finally, Theorem 1 can be generalized in a straightforward manner for when rewards belong to a one-parameter exponential family of distributions (e.g., Gaussian, Exponential, Gamma etc.) by replacing kl by the appropriate divergence measure.

4

A Simplified Lower Bound We now study how the regret c() scales as a function of the problem
dimensions d and m. To this aim, we present a simplified regret lower bound. Given , we say that a set H  M \ M has property P () iff, for all (M, M )  H2, M = M we have MiMi (1 - Mi ()) = 0 for all i. We may now state Theorem 2.

Theorem 2 Let H be a maximal (inclusion-wise) subset of M with property P (). Define () =

minM =M

M |M \M

| . Then:

c() 

()

MH maxiM\M

kl

i,

1 |M \M

|

. jM \M j

Corollary 1 Let   [a, 1]d for some constant a > 0 and M be such that each arm M  M, M = M has at most k suboptimal basic actions. Then c() = (|H|/k).

Theorem 2 provides an explicit regret lower bound. Corollary 1 states that c() scales at least

with the size of H. For most combinatorial sets, |H| is proportional to d - m (see supplementary

material for some examples), which implies that in these cases, one cannot obtain a regret smaller

than O((d - m)-m1in log(T )). This result is intuitive since d - m is the number of parameters

nOo(tdobmserv-med1inwlohge(nT

selecting )), which

the optimal arm. is acceptable since

The algorithms proposed below have typically, m is much smaller than d.

a

regret

of

4.2 Algorithms
Next we present ESCB, an algorithm for stochastic combinatorial bandits that relies on arm indexes as in UCB1 [21] and KL-UCB [5]. We derive finite-time regret upper bounds for ESCB that hold even if we assume that M 1  m, M  M, instead of M 1 = m, so that arms may have different numbers of basic actions.

4.2.1 Indexes

ESCB relies on arm indexes. In general, an index of arm M in round n, say bM (n), should be defined so that bM (n)  M  with high probability. Then as for UCB1 and KL-UCB, applying the

principle of optimism against uncertainty, a natural way to devise algorithms based on indexes is to

select in each round the arm with the highest index. Under a given algorithm, at time n, we define

ti(n) =

n s=1

Mi(s)

the number of times

basic

action

i has been sampled.

The empirical mean

reward of action i is then defined as i(n) = (1/ti(n))

n s=1

Xi(s)Mi(s)

if

ti(n)

>

0

and

i(n)

=

0 otherwise. We define the corresponding vectors t(n) = (ti(n))i[d] and (n) = (i(n))i[d].

The indexes we propose are functions of the round n and of (n). Our first index for arm M ,
referred to as bM (n, (n)) or bM (n) for short, is an extension of KL-UCB index. Let f (n) = log(n) + 4m log(log(n)). bM (n, (n)) is the optimal value of the following optimization problem:

max M q s.t. (M t(n)) kl((n), q)  f (n),
q

(2)

where we use the convention that for v, u  Rd, vu = (viui)i[d]. As we show later, bM (n) may be computed efficiently using a line search procedure similar to that used to determine KL-UCB index.

Our second index cM (n, (n)) or cM (n) for short is a generalization of the UCB1 and UCB-tuned indexes:

cM (n) = M (n) +

f (n) d Mi 2 i=1 ti(n)

Note that, in the classical bandit problems with independent arms, i.e., when m = 1, bM (n) reduces to the KL-UCB index (which yields an asymptotically optimal algorithm) and cM (n) reduces
to the UCB-tuned index. The next theorem provides generic properties of our indexes. An important consequence of these properties is that the expected number of times where bM (n, (n)) or cM (n, (n)) underestimate  () is finite, as stated in the corollary below.

5

Theorem 3 (i) For all n  1, M  M and   [0, 1]d, we have bM (n,  )  cM (n,  ). (ii) There exists Cm > 0 depending on m only such that, for all M  M and n  2:
P[bM (n, (n))  M ]  Cmn-1(log(n))-2.

Corollary 2 n1 P[bM (n, (n))   ]  1 + Cm n2 n-1(log(n))-2 < .

Statement (i) in the above theorem is obtained combining Pinsker and Cauchy-Schwarz inequalities.

The proof of statement (ii) is based on a concentration inequality on sums of empirical KL diver-

gences proven in [22]. It enables to control the fluctuations of multivariate empirical distributions

for exponential families. It should also be observed that indexes bM (n) and cM (n) can be extended

in a straightforward manner to the case of continuous linear bandit problems, where the set of arms

is the unit sphere and one wants to maximize the dot product between the arm and an unknown

vector. bM (n) can also be extended to the case where reward distributions are not Bernoulli but

lie in an exponential family (e.g. Gaussian, Exponential, Gamma, etc.), replacing kl by a suitably

chosen divergence measure. A close look at cM (n) reveals that the indexes proposed in [10], [11],

and [9] are too conservative to be optimal in our setting: there the "confidence bonus"

d Mi i=1 ti(n)

was replaced by (at least) m

d i=1

Mi ti (n)

.

Note

that

[10],

[11]

assume

that

the

various

basic

actions

are arbitrarily correlated, while we assume independence among basic actions. When independence

does

not

hold,

[11]

provides

a

problem

instance

where

the

regret


is

at

least

O(

md min

log(T )).

This

does

not

contradict

our

regret

upper

bound

(scaling

as

O(

dm min

log(T ))),

since

we

have

added

the

independence assumption.

4.2.2 Index computation
While the index cM (n) is explicit, bM (n) is defined as the solution to an optimization problem. We show that it may be computed by a simple line search. For   0, w  [0, 1] and v  N, define:
g(, w, v) = 1 - v + (1 - v)2 + 4wv /2.
Fix n, M , (n) and t(n). Define I = {i : Mi = 1, i(n) = 1}, and for  > 0, define: F () = ti(n)kl(i(n), g(, i(n), ti(n))).
iI

Theorem 4 If I = , bM (n) = ||M ||1. Otherwise: (i)   F () is strictly increasing, and F (R+) = R+. (ii) Define  as the unique solution to F () = f (n). Then bM (n) = ||M ||1 - |I| +
iI g( , i(n), ti(n)).
Theorem 4 shows that bM (n) can be computed using a line search procedure such as bisection, as this computation amounts to solving the nonlinear equation F () = f (n), where F is strictly increasing. The proof of Theorem 4 follows from KKT conditions and the convexity of KL divergence.
4.2.3 The ESCB Algorithm
The pseudo-code of ESCB is presented in Algorithm 1. We consider two variants of the algorithm based on the choice of the index M (n): ESCB-1 when M (n) = bM (n) and ESCB-2 if M (n) = cM (n). In practice, ESCB-1 outperforms ESCB-2. Introducing ESCB-2 is however instrumental in the regret analysis of ESCB-1 (in view of Theorem 3 (i)). The following theorem provides a finite time analysis of our ESCB algorithms. The proof of this theorem borrows some ideas from the proof of [11, Theorem 3].
Theorem 5 The regret under algorithms   {ESCB-1, ESCB-2} satisfies for all T  1: R(T )  16dm-m1inf (T ) + 4dm3-m2in + Cm,
where Cm  0 does not depend on , d and T . As a consequence R(T ) = O(dm-m1in log(T )) when T  .

6

Algorithm 1 ESCB
for n  1 do Select arm M (n)  arg maxMM M (n). Observe the rewards, and update ti(n) and i(n), i  M (n).
end for

Algorithm 2 COMBEXP

Initialization: Set q0 = 0,  = for n  1 do

m log -m1in
m log -m1in+ C(Cm2d+m)T

and  = C, with C

=

.
m3/2

Mixing: Let qn-1 = (1 - )qn-1 + 0.

Decomposition: Select a distribution pn-1 over M such that M pn-1(M )M = mqn-1.

Sampling: Select a random arm M (n) with distribution pn-1 and incur a reward Yn = i Xi(n)Mi(n). Estimation: Let n-1 = E M M , where M has law pn-1. Set X (n) = Yn+n-1M (n), where +n-1 is the pseudo-inverse of n-1.

Update: Set qn(i)  qn-1(i) exp(Xi(n)), i  [d].

Projection: Set qn to be the projection of qn onto the set P using the KL divergence.

end for

ESCB with time horizon T has a complexity of O(|M|T ) as neither bM nor cM can be written as M y for some vector y  Rd. Assuming that the offline (static) combinatorial problem is solvable in O(V (M)) time, the complexity of CUCB algorithm in [10] and [11] after T rounds is O(V (M)T ). Thus, if the offline problem is efficiently implementable, i.e., V (M) = O(poly(d)), CUCB is efficient, whereas ESCB is not since |M| may have exponentially many elements. In 2.5
of the supplement, we provide an extension of ESCB called EPOCH-ESCB, that attains almost the
same regret as ESCB while enjoying much better computational complexity.

5 Adversarial Combinatorial Bandits under Bandit Feedback

We now consider adversarial combinatorial bandits with bandit feedback. We start with the following observation:

max M X = max  X,

M M

Co(M)

with Co(M) the convex hull of M. We embed M in the d-dimensional simplex by dividing its elements by m. Let P be this scaled version of Co(M).

Inspired by OSMD [13, 18], we propose the COMBEXP algorithm, where the KL divergence

is the Bregman divergence used to project onto P. Projection using the KL divergence is

addressed in [23]. We denote the KL divergence between distributions q and p in P by

KL(p, q) =

i[d] p(i) log

p(i) q(i)

.

The

projection

of

distribution

q

onto

a

closed

convex

set



of

distributions is p = arg minp KL(p, q).

Let  be the smallest nonzero eigenvalue of E[M M ], where M is uniformly distributed over M.

We define

the

exploration-inducing

distribution

0



P:

0i

=

1 m|M|

MM Mi,

i  [d], and

let min = mini m0i . 0 is the distribution over basic actions [d] induced by the uniform distri-

bution over M. The pseudo-code for COMBEXP is shown in Algorithm 2. The KL projection

in COMBEXP ensures that mqn-1  Co(M). There exists , a distribution over M such that

mqn-1 = M (M )M . This guarantees that the system of linear equations in the decomposition step is consistent. We propose to perform the projection step (the KL projection of q onto P) using

interior-point methods [24]. We provide a simpler method in 3.4 of the supplement. The decom-

position step can be efficiently implemented using the algorithm of [25]. The following theorem

provides a regret upper bound for COMBEXP.

Theorem 6 For all T  1: RCOMBEXP(T )  2

m3T

d

+

m1/2 

log -m1in

+

m5/2 

log -m1in.

7

For most classes of M, we have -m1in = O(poly(d)) and m(d)-1 = O(1) [4]. For these classes, COMBEXP has a regret of O( m3dT log(d/m)), which is a factor m log(d/m) off the lower bound (see Table 2).
It might not be possible to compute the projection step exactly, and this step can be solved up to accuracy n in round n. Namely we find qn such that |KL(qn, qn) - arg minp KL(p, qn)|  n. Proposition 1 shows that for n = O(n-2 log-3(n)), the approximate projection gives the same regret as when the projection is computed exactly. Theorem 7 gives the computational complexity of COMBEXP with approximate projection. When Co(M) is described by polynomially (in d) many linear equalities/inequalities, COMBEXP is efficiently implementable and its running time scales (almost) linearly in T . Proposition 1 and Theorem 7 easily extend to other OSMD-type algorithms and thus might be of independent interest.

Proposition 1 If the projection step of COMBEXP is solved up to accuracy n = O(n-2 log-3(n)), we have:

RCOMBEXP(T )  2

2m3T

m1/2 d+


log

-m1in

+

2m5/2 

log

-m1in.

Theorem 7 Assume that Co(M) is defined by c linear equalities and s linear inequalities. If the

projection step is plexity O(T [ s(c

solved + d)3

up to log(T

accuracy ) + d4]).

n = O(n-2 log-3(n)), then COMBEXP has time com-

The time complexity of COMBEXP can be reduced by exploiting the structure of M (See [24,

page 545]). complexity

oIfnCpOarMtiBcuElXar,PifisinOe(qTua[cli2ty sc(ocns+tradi)nltosgd(eTsc)r+ibidn4g])C. o(M)

are

box

constraints,

the

time

The computational complexity of COMBEXP is determined by the structure of Co(M) and COMB-
EXP has O(T log(T )) time complexity due to the efficiency of interior-point methods. In con-
trast, the computational complexity of COMBAND depends on the complexity of sampling from M.
COMBAND may have a time complexity that is super-linear in T (see [16, page 217]). For instance,
consider the matching problem described in Section 2. We have c = 2m equality constraints and s = m2 box constraints, so that the time complexity of COMBEXP is: O(m5T log(T )). It is noted that using [26, Algorithm 1], the cost of decomposition in this case is O(m4). On the other hand, COMBBAND has a time complexity of O(m10F (T )), with F a super-linear function, as it requires to approximate a permanent, requiring O(m10) operations per round. Thus, COMBEXP has much
lower complexity than COMBAND and achieves the same regret.

6 Conclusion

We have investigated stochastic and adversarial combinatorial bandits. For stochastic combinatorial

bandits with semi-bandit feedback, we have provided a tight, problem-dependent regret lower bound

that, with

iOn (mdosmt cas-me1isn,

scales at least as O((d - log(T )) regret. We plan

m)-m1in log(T )). to reduce the gap

We proposed between this

ESCB, an algorithm regret guarantee and

the regret lower bound, as well as investigate the performance of EPOCH-ESCB. For adversarial

combinatorial bandits with bandit feedback, we proposed the COMBEXP algorithm. There is a gap

between the regret of COMBEXP and the known regret lower bound in this setting, and we plan to

reduce it as much as possible.

Acknowledgments A. Proutiere's research is supported by the ERC FSA grant, and the SSF ICT-Psi project.

8

References
[1] Herbert Robbins. Some aspects of the sequential design of experiments. In Herbert Robbins Selected Papers, pages 169-177. Springer, 1985.
[2] Sebastien Bubeck and Nicolo Cesa-Bianchi. Regret analysis of stochastic and nonstochastic multi-armed bandit problems. Foundations and Trends in Machine Learning, 5(1):1-222, 2012.
[3] Nicolo Cesa-Bianchi and Gabor Lugosi. Prediction, learning, and games, volume 1. Cambridge University Press Cambridge, 2006.
[4] Nicolo Cesa-Bianchi and Gabor Lugosi. Combinatorial bandits. Journal of Computer and System Sciences, 78(5):1404-1422, 2012.
[5] Aurelien Garivier and Olivier Cappe. The KL-UCB algorithm for bounded stochastic bandits and beyond. In Proc. of COLT, 2011.
[6] Venkatachalam Anantharam, Pravin Varaiya, and Jean Walrand. Asymptotically efficient allocation rules for the multiarmed bandit problem with multiple plays-part i: iid rewards. Automatic Control, IEEE Transactions on, 32(11):968-976, 1987.
[7] Branislav Kveton, Zheng Wen, Azin Ashkan, Hoda Eydgahi, and Brian Eriksson. Matroid bandits: Fast combinatorial optimization with learning. In Proc. of UAI, 2014.
[8] Yi Gai, Bhaskar Krishnamachari, and Rahul Jain. Learning multiuser channel allocations in cognitive radio networks: A combinatorial multi-armed bandit formulation. In Proc. of IEEE DySpan, 2010.
[9] Yi Gai, Bhaskar Krishnamachari, and Rahul Jain. Combinatorial network optimization with unknown variables: Multi-armed bandits with linear rewards and individual observations. IEEE/ACM Trans. on Networking, 20(5):1466-1478, 2012.
[10] Wei Chen, Yajun Wang, and Yang Yuan. Combinatorial multi-armed bandit: General framework and applications. In Proc. of ICML, 2013.
[11] Branislav Kveton, Zheng Wen, Azin Ashkan, and Csaba Szepesvari. Tight regret bounds for stochastic combinatorial semi-bandits. In Proc. of AISTATS, 2015.
[12] Zheng Wen, Azin Ashkan, Hoda Eydgahi, and Branislav Kveton. Efficient learning in large-scale combinatorial semi-bandits. In Proc. of ICML, 2015.
[13] Jean-Yves Audibert, Sebastien Bubeck, and Gabor Lugosi. Regret in online combinatorial optimization. Mathematics of Operations Research, 39(1):31-45, 2013.
[14] Andras Gyorgy, Tamas Linder, Gabor Lugosi, and Gyorgy Ottucsak. The on-line shortest path problem under partial monitoring. Journal of Machine Learning Research, 8(10), 2007.
[15] Satyen Kale, Lev Reyzin, and Robert Schapire. Non-stochastic bandit slate problems. Advances in Neural Information Processing Systems, pages 1054-1062, 2010.
[16] Nir Ailon, Kohei Hatano, and Eiji Takimoto. Bandit online optimization over the permutahedron. In Algorithmic Learning Theory, pages 215-229. Springer, 2014.
[17] Gergely Neu. First-order regret bounds for combinatorial semi-bandits. In Proc. of COLT, 2015.
[18] Sebastien Bubeck, Nicolo Cesa-Bianchi, and Sham M. Kakade. Towards minimax policies for online linear optimization with bandit feedback. Proc. of COLT, 2012.
[19] Todd L. Graves and Tze Leung Lai. Asymptotically efficient adaptive choice of control laws in controlled markov chains. SIAM J. Control and Optimization, 35(3):715-743, 1997.
[20] Tze Leung Lai and Herbert Robbins. Asymptotically efficient adaptive allocation rules. Advances in Applied Mathematics, 6(1):4-22, 1985.
[21] Peter Auer, Nicolo Cesa-Bianchi, and Paul Fischer. Finite time analysis of the multiarmed bandit problem. Machine Learning, 47(2-3):235-256, 2002.
[22] Stefan Magureanu, Richard Combes, and Alexandre Proutiere. Lipschitz bandits: Regret lower bounds and optimal algorithms. Proc. of COLT, 2014.
[23] I. Csiszar and P.C. Shields. Information theory and statistics: A tutorial. Now Publishers Inc, 2004.
[24] Stephen Boyd and Lieven Vandenberghe. Convex optimization. Cambridge university press, 2004.
[25] H. D. Sherali. A constructive proof of the representation theorem for polyhedral sets based on fundamental definitions. American Journal of Mathematical and Management Sciences, 7(3-4):253-270, 1987.
[26] David P. Helmbold and Manfred K. Warmuth. Learning permutations with exponential weights. Journal of Machine Learning Research, 10:1705-1736, 2009.
9

