Non-convex Statistical Optimization for Sparse Tensor Graphical Model

Wei Sun Yahoo Labs Sunnyvale, CA sunweisurrey@yahoo-inc.com
Han Liu Department of Operations Research
and Financial Engineering Princeton University Princeton, NJ
hanliu@princeton.edu

Zhaoran Wang Department of Operations Research
and Financial Engineering Princeton University Princeton, NJ
zhaoran@princeton.edu
Guang Cheng Department of Statistics
Purdue University West Lafayette, IN chengg@stat.purdue.edu

Abstract
We consider the estimation of sparse graphical models that characterize the dependency structure of high-dimensional tensor-valued data. To facilitate the estimation of the precision matrix corresponding to each way of the tensor, we assume the data follow a tensor normal distribution whose covariance has a Kronecker product structure. The penalized maximum likelihood estimation of this model involves minimizing a non-convex objective function. In spite of the non-convexity of this estimation problem, we prove that an alternating minimization algorithm, which iteratively estimates each sparse precision matrix while fixing the others, attains an estimator with the optimal statistical rate of convergence as well as consistent graph recovery. Notably, such an estimator achieves estimation consistency with only one tensor sample, which is unobserved in previous work. Our theoretical results are backed by thorough numerical studies.
1 Introduction
High-dimensional tensor-valued data are prevalent in many fields such as personalized recommendation systems and brain imaging research [1, 2]. Traditional recommendation systems are mainly based on the user-item matrix, whose entry denotes each user's preference for a particular item. To incorporate additional information into the analysis, such as the temporal behavior of users, we need to consider a user-item-time tensor. For another example, functional magnetic resonance imaging (fMRI) data can be viewed as a three way (third-order) tensor since it contains the brain measurements taken on different locations over time for various experimental conditions. Also, in the example of microarray study for aging [3], thousands of gene expression measurements are recorded on 16 tissue types on 40 mice with varying ages, which forms a four way gene-tissue-mouse-age tensor. In this paper, we study the estimation of conditional independence structure within tensor data. For example, in the microarray study for aging we are interested in the dependency structure across different genes, tissues, ages and even mice. Assuming data are drawn from a tensor normal distribution, a straightforward way to estimate this structure is to vectorize the tensor and estimate the underlying Gaussian graphical model associated with the vector. Such an approach ignores the tensor structure
1

and requires estimating a rather high dimensional precision matrix with insufficient sample size. For instance, in the aforementioned fMRI application the sample size is one if we aim to estimate the dependency structure across different locations, time and experimental conditions. To address such a problem, a popular approach is to assume the covariance matrix of the tensor normal distribution is separable in the sense that it is the Kronecker product of small covariance matrices, each of which corresponds to one way of the tensor. Under this assumption, our goal is to estimate the precision matrix corresponding to each way of the tensor. See 1.1 for a detailed survey of previous work.

Despite the fact that the assumption of the Kronecker product structure of covariance makes the

statistical model much more parsimonious, it poses significant challenges. In particular, the penalized

negative log-likelihood function is non-convex with respect to the unknown sparse precision matrices.

Consequently, there exists a gap between computational and statistical theory. More specifically,

as we will show in 1.1, existing literature mostly focuses on establishing the existence of a local

optimum that has desired statistical guarantees, rather than offering efficient algorithmic procedures

that provably achieve the desired local optima. In contrast, we analyze an alternating minimiza-

tion algorithm which iteratively minimizes the non-convex objective function with respect to each

individual precision matrix while fixing the others. The established theoretical guarantees of the

proposed algorithm are as follows. Suppose that we have n observations from a K-th order tensor

normal distribution. We denote by mk, sk, dk (k = 1, . . . , K) the dimension, sparsity, and max

nteunmsobre.rBoefsnidoens-,zwereodeenfitrnieesmin=eaQchKkpr=o1wmokf.thTeheprke-ctihsipornecmisaitornixmcoatrrriexspeostnimdinatgortofrtohme ko-uthr

way of the alternating

minimization algorithm achieves a mk(mk + sk) log mk/(nm) statistical rate of convergence in

Frobenius norm, which is minimax-optimal since this is the best rate one can obtain even when the

rcaeonsndtdKaitidoknp,1wmterkueseltoapgbrlmeicskhis/ai(opnnmmm)akrtraloitcegemos fakcr/eo(nnkvnmeor)wgrenantce[4eo]f.incFosunprvtehecretgrraemnlocnreoeir,nmumn. daTexhrneasonermee,xstwtirmahiaicrthiroeinps racelossoennsotipasttbeiimnlicatyyl, results and a sufficiently large signal strength condition further imply the model selection consistency

of recovering all the edges. A notable implication of these results is that, when K 3, our alternating

minimization algorithm can achieve estimation consistency in Frobenius norm even if we only have

access to one tensor sample, which is often the case in practice. This phenomenon is unobserved in

previous work. Finally, we conduct extensive experiments to evaluate the numerical performance of

the proposed alternating minimization method. Under the guidance of theory, we propose a way to

significantly accelerate the algorithm without sacrificing the statistical accuracy.

1.1 Related work and our contribution
A special case of our sparse tensor graphical model when K = 2 is the sparse matrix graphical model, which is studied by [5-8]. In particular, [5] and [6] only establish the existence of a local optima with desired statistical guarantees. Meanwhile, [7] considers an algorithm that is similar to ours. However, the statistical rates of convergence obtained by [6, 7] are much slower than ours when K = 2. See Remark 3.6 in 3.1 for a detailed comparison. For K = 2, our statistical rate of convergence in Frobenius norm recovers the result of [5]. In other words, our theory confirms that the desired local optimum studied by [5] not only exists, but is also attainable by an efficient algorithm. In addition, for matrix graphical model, [8] establishes the statistical rates of convergence in spectral and Frobenius norms for the estimator attained by a similar algorithm. Their results achieve estimation consistency in spectral norm with only one matrix observation. However, their rate is slower than ours with K = 2. See Remark 3.11 in 3.2 for a detailed discussion. Furthermore, we allow K to increase and establish estimation consistency even in Frobenius norm for n = 1. Most importantly, all these results focus on matrix graphical model and can not handle the aforementioned motivating applications such as the gene-tissue-mouse-age tensor dataset. In the context of sparse tensor graphical model with a general K, [9] shows the existence of a local optimum with desired rates, but does not prove whether there exists an efficient algorithm that provably attains such a local optimum. In contrast, we prove that our alternating minimization algorithm achieves an estimator with desired statistical rates. To achieve it, we apply a novel theoretical framework to separately consider the population and sample optimizers, and then establish the onestep convergence for the population optimizer (Theorem 3.1) and the optimal rate of convergence for the sample optimizer (Theorem 3.4). A new concentration result (Lemma B.1) is developed for this purpose, which is also of independent interest. Moreover, we establish additional theoretical

2

guarantees including the optimal rate of convergence in max norm, the estimation consistency in spectral norm, and the graph recovery consistency of the proposed sparse precision matrix estimator. In addition to the literature on graphical models, our work is also closely related to a recent line of research on alternating minimization for non-convex optimization problems [10-13]. These existing results mostly focus on problems such as dictionary learning, phase retrieval and matrix decomposition. Hence, our statistical model and analysis are completely different from theirs. Also, our paper is related to a recent line of work on tensor decomposition. See, e.g., [14-17] and the references therein. Compared with them, our work focuses on the graphical model structure within tensor-valued data.
Na|||nAodt|aF||t1rioobn:=e:nFimuosarnxaoimrPma,jtrr|ieAxspAie,jc|t=iavse(tlAhy.eiW,mj)ea2xdeimRfinudemkdaA, bwkseo1,ldoufetfen:=orotewPksAiu6=mkj 1.|AD, ike,Anj|okate2s,viktesAco(kfAfF-d)aiaassgiotthsneamlvae1xct,nosorprizmeacttaironandl, of A which stacks the columns of A. Let tr(A) be the trace of A. For an index set S = {(i, j), i, j 2 {1, . . . , d}}, we define [A]S as the matrix whose entry indexed by (i, j) 2 S is equal to Ai,j, and zero otherwise. We denote 1d as the identity matrix with dimension d  d. Throughout this paper, we use C, C1, C2, . . . to denote generic absolute constants, whose values may vary from line to line.

2 Sparse tensor graphical model

2.1 Preliminary

We employ the tensor notations used by [18]. Throughout this paper, higher order tensors are denoted

by boldface Euler script letters, e.g. T . We consider a K-th order tensor T 2 Rm1m2***mK .

When K = 1 it reduces to a vector and when K = 2 it reduces to a matrix. The (i1, . . . , iK )-th

element of the tensor T is denoted to be as vec(T ) := (T1,1,...,1, . . . , Tm1,1,...,1, . . .
In addition, we define the Frobenius norm

oT, fTi11a,,.m.t.e,2inK,s..o..,rmMTKe,aaTnswmkT1h,imkleF2,,.w.:.=,emdKeP)fi>ni1e2,..tR.h,iemKvTweici21tt,ho..r.m,iizKa=ti1o/Qn2.kofmTk

.

For tensors, a fiber refers to the higher order analogue of the row and column of matrices. A fiber is

obtained by fixing all but one of the indices of the tensor, e.g., the mode-k fiber of T(k) is given by

Tinit1o,..a.,,mikat1r,i:x,i.kW+1e,..d.,eiKno.tMe Ta(trki)caizsatthioenm, aoldseo-kknmoawtrnicaiszautniofnolodfinagt,einsstohreTp,rowcheiscshtaortrraanngsefsorthme

a tensor mode-k

fibers to be the columns of the resulting matrix. Another useful operation in tensors is the k-mode

product. The k-mode product of a tensor T 2 Rm1m2***mK with a matrix A 2 RJmk is denoted

as T
A)i1 with

k A and is of the
,...,ik 1,j,ik+1,...,iK
Ak 2 Rmkmk , k

s:==ize1P,m. mi.1k.k=, 1K*T*,i*1w,.e.m.,diKkefiAn1je,iTkJ.

 mk+1  * * *  mK . In addition, for a list  {A1, . . . , AK } :=

Its of T

entry is defined as matrices {A1, . . . 1 A1 2 * * * K

(T k , AK } AK .

2.2 Model

A tensor T 2 Rm1m2***mK follows the tensor normal distribution with zero mean and covariance matrices 1, . . . , K , denoted as T  TN(0; 1, . . . , K ), if its probability density function is

 YK

p(T |1, . . . , K ) = (2) m/2

|k| m/(2mk)

k=1

exp

kT   1/2k2F /2 ,

(2.1)

wdihsterriebumtion=reQduKkc=e1s

mk and  1/2 := to the vector normal

{dist1ri1b/u2t,io. n. .w, ithKz1e/2ro}.mWeahneannKd co=var1i,anthcies

tensor normal 1. According

to [9, 18], it can be shown that T  TN(0; 1, . . . , K ) if and only if vec(T )  N(vec(0); K 

* * *  1), where vec(0) 2 Rm and  is the matrix Kronecker product.

We consider the parameter estimation for the tensor normal model. Assume that we observe in-

dependently and identically distributed tensor samples T1, aim to estimate the true covariance matrices (1, . . . , K )

..., and

TthneifrrocmorrTesNp(o0n;din1g,

..., true

prKec)i.sWione

Tmthheaitspriarcereansmo(remtea1rli,izz.aa.tt.iio,onn oKafs)sthuwemhtpeetnrieosonrdnkooe=rsmnaolktdcih1star(nikbgue=titoh1ne,,.gw.r.ae,paKhsss)ut.rmuTceotutahrdeadtorkefstshketkhoFerii=gdien1natlfiofiprraekbcii=lsiitoy1n,is.ms.u.aet,rKiixn..

3

Aviesniacstrot([a2uSn.r(1da)ag.reKdUtphapetpo*sr*poa*aacrcsohintystot1oa)nef]ste,taitmchPheatpnKkere=eg1ca(iktmsi,ivok/enml=omkg)a-1ltlor,iki.gxe.|l.iin,hKkot|ho,,edwishfhuitgeonrhceu-tidsoSienmt:eoh=nfestmihn1oeanPxateilmnin=sscu1oemrvnenaclroi(ikroTme,il)wiahvleeodcoci(dsoTtnrimi)sb>ieudt.tehirToonoda penalized log-likelihood estimator, which is obtained by minimizing

qn(1, . . . , K )

:=

1 m

tr[S(K

***

1)]

XK 1 k=1 mk

XK log |k| + P
k=1

k (k),

(2.2)

wtbhrheoealradesfsPaompkie(lny*)aolitfsyoa[t1hp9ee]rn,apil.eetny.,afPlutynkcf(utinocnkt)iion=ndse.xkekdbkykt1h,oefft.uTnhinisgepsatirmamateiotenrprokc. eIdnutrheisapppalpieesr,swimeilfaorclyustoona

We name the penalized model from (2.2) as the sparse tensor graphical model. It reduces to the sparse vector graphical model [20, 21] when K = 1, and the sparse matrix graphical model [5-8] when K = 2. Our framework generalizes them to fulfill the demand of capturing the graphical structure of higher order tensor-valued data.

2.3 Estimation

This section introduces the estimation procedure for the sparse tensor graphical model. A computationally efficient algorithm is provided to estimate the precision matrix for each way of the tensor.

Recall that in (2.2), qn(1, . . . , K ) is jointly non-convex with respect to 1, . . . , K . Nevertheless, qn(1, . . . , K ) is a bi-convex problem since qn(1, . . . , K ) is convex in k when the rest K 1 precision matrices are fixed. The bi-convex property plays a critical role in our algorithm construction and its theoretical analysis in 3.

According to its bi-convex property, we propose to solve this non-convex problem by alternatively update one precision matrix with other matrices fixed. Note that, for any k = 1, . . . , K, minimizing (2.2) with respect to k while fixing the rest K 1 precision matrices is equivalent to minimizing

L(k )

:=

1 mk

tr(Sk

k

)

1 mk

log

|k |

+

k kk k1,off .

(2.3)

Here

Sk

:=

mk nm

Pn
i=1

Vik

Vik>

,

where

Vik

:=

 Ti



11/2, . . . , 1k/21, 1mk , 1k/+21, . . . , 1K/2


(k)

with  the tensor product operation and [*](k) the mode-k matricization operation defined in 2.1. The

result in (2.3) can be shown by noting according to the properties of mode-k

tmhaattrViciikza=tio[Tnis](hko)wn b1K/y2[18*]*.

*Herea1kf/+t2e1r, we1kd/r2o1pth* e* *super11s/c2rip>t

kGaoufsVsiaiknifgtrhaeprheicisalnmo ocodnelfuasnidonc.aNn obtee

that minimizing (2.3) corresponds to estimating solved efficiently via the glasso algorithm [21].

vector-valued

Algorithm 1 Solve sparse tensor graphical model via Tensor lasso (Tlasso)

1: Input: Tensor samples T1 . . . , Tn, tuning parameters 1, . . . , K , max number of iterations T .

2: 3:

Initialize Repeat:

(10),

.

.

.

,

(K0)

randomly

as

symmetric

and

positive

definite

matrices

and

set

t

=

0.

4: t = t + 1.

5: For k = 1, . . . , K:

6: Given (1t), . . . , (kt) 1, (kt+11), . . . , K(t 1), solve (2.3) for (kt) via glasso [21].

7: 8:

Normalize End For

(kt)

such that k(kt)kF

= 1.

9: Until t = T .

10: Output: b k = (kT ) (k = 1, . . . , K).

The details of our Tensor lasso (Tlasso) algorithm are shown in Algorithm 1. It starts with a random initialization and then alternatively updates each precision matrix until it converges. In 3, we will illustrate that the statistical properties of the obtained estimator are insensitive to the choice of the initialization (see the discussion following Theorem 3.5).

4

3 Theory of statistical optimization

We first prove the estimation errors in Frobenius norm, max norm, and spectral norm, and then provide the model selection consistency of our Tlasso estimator. We defer all the proofs to the appendix.

3.1 Estimation error in Frobenius norm

Based on the penalized log-likelihood in (2.2), we define the population log-likelihood function as

q(1, . . . , K ) :=

1 m

E

trvec(T

)vec(T

)>(K



*

*

*



 1)

XK
k=1

1 mk

log |k|.

(3.1)

By minimizing q(1, . . . , K ) with respect to k, k = 1, . . . , K, we obtain the population minimization function with the parameter [K] k := {1, . . . , k 1, k+1, . . . , K }, i.e.,

Mk([K] k) := argmin q(1, . . . , K ).
k

(3.2)

Theorem 3.1. For any k minimization function in

= 1, . . . , K, (3.2) satisfies

if

j

(j

6=

k)

satisfies 

Mk([K] k) = m mk

Qtr(j6=jktrj()6=j 0j,)the1nthk.e

population

Theorem 3.1 shows a surprising phenomenon that the population minimization function recovers the

true precision matrix up to a constant in only one iteration. If j = j , j 6= k, then Mk([K] k) =

mikn.imOtihzaetriwonisef,uanfctteirona

normalization such still fully recovers

Algorithm 1 is sufficient. Such a suggestion

that wkil.l

kMk([K] k)kF = 1, the normalized population This observation suggests that setting T = 1 in be further supported by our numeric results.

In practice, when (3.1) is unknown, we can approximate it via its sample version qn(1, . . . , K ) defined in (2.2), which gives rise to the statistical error in the estimation procedure. Analogously to (3.2), we define the sample-based minimization function with parameter [K] k as

Mck([K] k) := argmin qn(1, . . . , K ).
k

(3.3)

In order to prove the estimation error, it remains to quantify the statistical error induced from finite samples. The following two regularity conditions are assumed for this purpose. Condition 3.2 (Bounded Eigenvalues). For any k = 1, . . . , K, there is a constant C1 > 0 such that,
0 < C1  min(k)  max(k)  1/C1 < 1, where min(k) and max(k) refer to the minimal and maximal eigenvalue of k, respectively.

Condition 3.2 requires the uniform boundedness of the eigenvalues of has been commonly assumed in the graphical model literature [22].

true

covariance

matrices

k

.

It

Csaotinsdfiietsio1n/C3.23p(Tlougnimngk)/. (Fnomr manky)k=

1, . . k

. , Kpand C2 log

some constant C2 mk /(nmmk ).

>

0,

the

tuning

parameter

k

Condition 3.3 specifies the choice of the tuning parameters. In practice, a data-driven tuning procedure [23] can be performed to approximate the optimal choice of the tuning parameters.

BSothfkeenf:oso=ernetz{cec(orhion,atjreaa)nicnt:triei[nergiszkiinn]igk,tjhtaeh6=neod0fsfi}tt-asd.tiiDnasetgeiioncgnaohlatbeleorctrrhohoemor,ospwpdoanefroesdnriettsyfioonpmfeaeraakssmu.pfFeafiotrcesririeetysnakctplhya:=rklaam=|rSgeke1t|e,cr.of.nom.sr,takKn, tk,wr,whakedici=duhesfii1sn,t.eh>.Be. ,0(nK,uimk..e)Lb.,aeesrt

B(k) := { 2 Rmkmk :  = >;  0; k kkF  }.

(3.4)

Theorem 3.4. Assume Conditions 3.2 and 3.3 hold. For any k = 1, . . . , K, the statistical error of the sample-based minimization function defined in (3.3) satisfies that, for any fixed j 2 B(j ) (j 6= k),

r!

Mck([K] k) Mk([K] k) F = OP

mk(mk + sk) log mk nm

,

(3.5)

where Mk([K]

k) and Mck([K]

k)

are

defined

in

(3.2)

and

(3.3),

and

m

=

QK
k=1

mk .

5

Theorem with j 6=

3.4 establishes the statistical error associated with Mck([K] k) for k. In comparison, previous work on the existence of a local solution

arbitrary j with desired

s2tatBis(ticjal)

property only establishes theorems similar to Theorem 3.4 for j = j with j 6= k. The extension

to an arbitrary j 2 rate of convergence

oBf(thej )diinffveorlevnecsenboent-wtreiveinalatescahmnpiclea-lbbaasreriderqsu. aPdarratitciculfaorrlmy,

we first establish the with its expectation

(Lemma B.1) via concentration of Lipschitz functions of Gaussian random variables [24]. This result

is also of independent interest. We then carefully characterize the rate of convergence of Sk defined in (2.3) (Lemma B.2). Finally, we develop (3.5) using the results for vector-valued graphical models

developed by [25].

According to Theorem 3.1 and Theorem 3.4, we obtain the rate of convergence of the Tlasso estimator in terms of Frobenius norm, which is our main result.

Theorem 3.5. Assume that Conditions 3.2 and 3.3 hold. For any k = 1, . . . , K, if the initialization satisfies (j0) 2 B(j ) for any j 6= k, then the estimator b k from Algorithm 1 with T = 1 satisfies,

r!

b k k F = OP

mk(mk + sk) log mk nm

,

(3.6)

where

m

=

QK
k=1

mk

and

B(j )

is

defined

in

(3.4).

Theorem 3.5 suggests that as long as the initialization is within a constant distance to the truth, our

Tlasso algorithm attains a consistent estimator after only one iteration. This initialization condition

(j0) 2 B(j ) trivially holds since for any (j0) that is positive definite and has unit Frobenius norm,

wteenshoarvneokrm(ja0l)distribkuktFion.

2 by noting that In literature, [9]

kshokwksFth=at

1 (k = 1, . . there exists

., a

K) for the identifiability of the local minimizer of (2.2) whose

convergence rate can achieve (3.6). However, it is unknown if their algorithm can find such minimizer

since there could be many other local minimizers.

A notable implication of Theorem 3.5 is that, when K 3, the estimator from our Tlasso algorithm can achieve estimation consistency even if we only have access to one observation, i.e., n = 1, which is often the case in practice. To see it, suppose that K = 3 and n = 1. When the dimensions m1, m2, and m3 are of the same order of magnitude and sk = O(mk) for k = 1, 2, 3, all the three error rates corresponding to k = 1, 2, 3 in (3.6) converge to zero.

This result indicates that the estimation of the k-th precision matrix takes advantage of the information

from the j-th way (j 6= k) of the tensor data. Consider a simple case that K = 2 and one precision

mtheaterifxfecti1ve=sa1mmp1leisskizneofwonr .eIsntimthaitsinsgcena2riios

the rows of in fact nm1

the matrix data are independent and hence . The optimalitpy result for the vector-valued

graphical model [4] implies which matches our result in

t(h3a.t6)th. eTohpertiemfoarler,attheeforarteesitnim(3at.6in)gobt2aiinsed

(m2 + by our

s2) log m2/(nm1), Tlasso estimator is

minimax-optimal since it is we know, this phenomenon

the has

best rate not been

odnisecocvaneroedbtbayinaenvyenprwevhieonuswj o(rjk

6= in

k) are known. As far as tensor graphical model.

Remark 3.6. For K = 2, our tensor graphical model reduces to matrix graphical model with Kronttaoebcplkise(hrmepd1rob+dyus[c61t])claoonvgdarmpia1n(/cm(en1smt+ru2c)m,tu2wr)ehli[oc5gh-[m8is]a.mIxnu(cmthh1ifs,amcsate2sre, ,ntht)ha]en/(rpnatmemo22f)(cmeostn1avb+elrigsshe1ne)(dcleobgoyfm[7b1]1.+Iinnlol(i3gte.6mra)t2ru)er/denu, c[e5ess]shows that there exists a local minimizer of the objective function whose estimation errors match ours. However, it is unknown if their estimator can achieve such convergence rate. On the other hand, our theorem confirms that our algorithm is able to find such estimator with optimal rate of convergence.

3.2 Estimation error in max norm and spectral norm We next show the estimation error in max norm and spectral norm. Trivially, these estimation errors are bounded by that in Frobenius norm shown in Theorem 3.5. To develop improved rates of convergence in max and spectral norms, we need to impose stronger conditions on true parameters.

6

We first introduce some important notations. Denote dk as the maximum number of non-zeros in any row of the true precision matrices k, that is,

dk

:= max
i2{1,...,mk }

{j 2 {1, . . . , mk} : [k]i,j

6= 0}

,

(3.7)

with | * | the cardinality of the inside set. For each covariance matrix k, we define k := |||k|||1.

Denote the Hessian matrix

 k

:=

k

1  k

1 2 Rm2km2k , whose entry [

 k

](i,j),(s,t)

corresponds

to the second order partial derivative of the objective function with respect to [k]i,j and [k]s,t. We

define |Sk| 

its sub-matrix indexed by the index |Sk| matrix with rows and columns

set of

Sk
 k

iansde[ xekd]Sbk,ySkSk=a[ndkSk1,

respekct1iv]Sekly,S.kM, worheiochveirs,

the we

define   := need to imkpose

an([irrke]pSkre,Sske)nta1bil1ity.

In order to establish the rate of convergence condition on the Hessian matrix.

in

max

norm,

we

Condition 3.7 (Irrepresentability). For each k = 1, . . . , K, there exists some k 2 (0, 1] such that

max
e2Sck

[

 k

]e,Sk

[

 k

]Sk

,Sk

1 11

k .

Condition 3.7 controls the influence of the non-connected This condition has been widely applied in lasso penalized

tmeromdeslisn[2S6ck,

on the 27].

connected

edges

in

Sk .

Condition 3.8 (Bounded Complexity). and the parameter dk in (3.7) satisfies

For eachpk = 1, . . . dk = o nm/(mk

,K log

, the parameters mk) .

k

,



 are bounded
k

Theorem 3.9. Suppose Conditions 3.2, 3.3, 3.7 and 3.8 hold. Assume sk = O(mk) for k = 1, . . . , K

and assume m0ks are in the same order, i.e., m1  m2  * * *  mK . For each k, if the initialization

satisfies

(j0)

2

B(j )

for

any

j

6=

k,

then

the

estimator r

b k

from

Algorithm !

1

with

T

=

2

satisfies,

b k k 1 = OP

mk log mk nm

.

(3.8)

In addition, the edge set of b k is a subset of the true edge set of k, that is, supp(b k)  supp(k).

Theorem 3.9 shows that our Tlasso estimator achieves the optimal rate of convergence in max norm [4]. Here we consider the estimator obtained after two iterations since we require a new concentration inequality (Lemma B.3) for the sample covariance matrix, which is built upon the estimator in Theorem 3.5. A direct consequence from Theorem 3.9 is the estimation error in spectral norm.

Corollary 3.10. Suppose the conditions of Theorem 3.9 hold, for any k = 1, . . . , K, we have r!

b k

k 2 = OP

dk

mk log mk nm

.

(3.9)

Remark 3.11. Now we compare our obtained rate of convergence in spectral norm for K = 2 with tohhofalOtdesPsftoaprblemixsahkme(dspkilne_itnh1e)thlsoepgab(romsuen1md_eadtmridx2e)gg/rr(eanepmhgirkcaa)plhmfso,orodkuerl=olibt1eta,rai2nt.ueTrdehr.eaIrtneefpiosarrfeta,iscwtuelhra.erHn, [od8w2k] eevseta(r,bsoklius_hr ef1as)s,tthewerhrriaactthee comes at the price of assuming the irrepresentability condition. Using recent advance in nonconvex regularization [28], we can eliminate the irrepresentability condition. We leave this to future work.

3.3 Model selection consistency

TTanhhdeeroienrfecomlrued3,e.i9snaeolnrldstuherreettsorutahecaehtditeghveeeset(shite,imjm)aowtedidethlpsr|e[elceicksti]ioio,njn|mc>oantCrsiixpstcemonrckryel,coatglysmuefxkfic/cl(iuendnmet sc)oafnloldrnistoionom-nienisfcootornmsatasatsniuvtmeCeed>thgae0ts,.

for each k Theorem

= 1, . . . , K, 3.12. Under

the the

minimal signal conditions of

k := min(i,j)2supp(k Theorem 3.9, if k

)

[Cpk]im,j kislongomt toko/(snmmal)l.for

some

constant C > 0, then for any k = 1, . . . , K, sign b k = sign(k), with high probability.

Theorem 3.12 indicates that our Tlasso estimator is able to correctly recover the graphical structure of each way of the high-dimensional tensor data. To the best of our knowledge, these is the first model selection consistency result in high dimensional tensor graphical model.

7

4 Simulations

We compare the proposed Tlasso estimator with two alternatives. The first one is the direct graph-

ical lasso (Glasso) approach [21] which applies the glasso to the vectorized tensor data to es-

timate iPmKum
k=1

lik1eliho*o*d* methKoddi(rPe-cMtlyL.ET)hperosepcoosnedd b (kt) b (kt 1) F K  0.001.

alternative method is the iterative penalized maxby [9], whose termination condition is set to be

For simplicity, in our Tlasso algorithm we set the initialization of k-th precision maptrix as 1mk for each k = 1, . . . , K and the total iteration T = 1. The tuning parameter k is set as 20 log mk/(nmmk). For a fair comparison, the same tuning parameter is applied in the P-MLE method. In the direct

Glasso approach, its tuning parameter is chosen by cross-validation via huge package [29].

We consider two simulations with a third order tensor, i.e., K = 3. In Simulation 1, we construct a triangle graph, while in Simulation 2, we construct a four nearest neighbor graph for each precision matrix. An illustration of the generated graphs are shown in Figure 1. In each simulation, we consider three scenarios, i.e., s1: n = 10 and (m1, m2, m3) = (10, 10, 10); s2: n = 50 and (m1, m2, m3) = (10, 10, 10); s3: n = 10 and (m1, m2, m3) = (100, 5, 5). We repeat each example 100 times and compute the averaged computational time, the averaged estimation error of the Kronecker TpreanrNtoterRdyu(T:co=tPfoRPf)p1,ir,aejnc1id*s(*ibato*hin,ejmt=rautK0eri,c,naeaeisn,gj(dam=tdiv1e0emfi)nr/2aemPteT3iP)(T1R(N1a:R=ib,)j.1P=Mi0o,*j)r*.e1* (sbapibe,jcKifi6=ca0l,lya1,i,wj e*6=*d* e0n)o/tPeK ai,iFj,j,1t(bhaeei,ttjrhue6=e (pi0o,)sji)ati-nvtdhe As shown in Figure 1, our Tlasso is dramatically faster than both alternative methods. In Scenario s3, Tlasso takes about five seconds for each replicate, the P-MLE takes about 500 seconds while the direct Glasso method takes more than one hour and is omitted in the plot. Tlasso algorithm is not only computationally efficient but also enjoys superior estimation accuracy. In all examples, the direct Glasso method has significantly larger errors than Tlasso due to ignoring the tensor graphical structure. Tlasso outperforms P-MLE in Scenarios s1 and s2 and is comparable to it in Scenario s3.

Time (seconds) Time (seconds)
Errors Errors

400

300

200

100

Glasso P-MLE

Tlasso

0 s1 s2 s3 Scenarios

400
200 Glasso P-MLE Tlasso
0 s1 s2 s3 Scenarios

0.08 0.06 0.04

Glasso P-MLE Tlasso

0.02

s1 s2 s3 Scenarios

0.08

0.06 0.04

Glasso P-MLE Tlasso

0.02

s1 s2 s3 Scenarios

Figure 1: Left two plots: illustrations of the generated graphs; Middle two plots: computational time;

Right two plots: estimation errors. In each group of two plots, the left (right) is for Simulation 1 (2).

Table 1 shows the variable selection performance. Our Tlasso identifies almost all edges in these six examples, while the Glasso and P-MLE method miss several true edges. On the other hand, Tlasso tends to include more non-connected edges than other methods.

Table 1: A comparison of variable selection performance. Here TPR and TNR denote the true positive rate and true negative rate.

Scenarios s1
Sim 1 s2 s3 s1
Sim 2 s2 s3

Glasso TPR TNR 0.27 (0.002) 0.96 (0.000) 0.34 (0.000) 0.93 (0.000)
// 0.08 (0.000) 0.96 (0.000) 0.15 (0.000) 0.92 (0.000)
//

P-MLE TPR TNR 1 (0) 0.89 (0.002) 1 (0) 0.89 (0.002) 1 (0) 0.93 (0.001) 0.93 (0.004) 0.88 (0.002) 1 (0) 0.85 (0.002) 0.82 (0.001) 0.93 (0.001)

Tlasso TPR TNR 1(0) 0.76 (0.004) 1(0) 0.76 (0.004) 1(0) 0.70 (0.004) 1(0) 0.65 (0.005) 1(0) 0.63 (0.005) 0.99(0.001) 0.38 (0.002)

Acknowledgement

We would like to thank the anonymous reviewers for their helpful comments. Han Liu is grateful for the support of NSF CAREER Award DMS1454377, NSF IIS1408910, NSF IIS1332109, NIH R01MH102339, NIH R01GM083084, and NIH R01HG06841. Guang Cheng's research is sponsored by NSF CAREER Award DMS1151692, NSF DMS1418042, Simons Fellowship in Mathematics, ONR N00014-15-1-2331 and a grant from Indiana Clinical and Translational Sciences Institute.

8

References
[1] S. Rendle and L. Schmidt-Thieme. Pairwise interaction tensor factorization for personalized tag recommendation. In International Conference on Web Search and Data Mining, 2010.
[2] G.I. Allen. Sparse higher-order principal components analysis. In International Conference on Artificial Intelligence and Statistics, 2012.
[3] J. Zahn, S. Poosala, A. Owen, D. Ingram, et al. AGEMAP: A gene expression database for aging in mice. PLOS Genetics, 3:2326-2337, 2007.
[4] T. Cai, W. Liu, and H.H. Zhou. Estimating sparse precision matrix: Optimal rates of convergence and adaptive estimation. Annals of Statistics, 2015.
[5] C. Leng and C.Y. Tang. Sparse matrix graphical models. Journal of the American Statistical Association, 107:1187-1200, 2012.
[6] J. Yin and H. Li. Model selection and estimation in the matrix normal graphical model. Journal of Multivariate Analysis, 107:119-140, 2012.
[7] T. Tsiligkaridis, A. O. Hero, and S. Zhou. On convergence of Kronecker graphical Lasso algorithms. IEEE Transactions on Signal Processing, 61:1743-1755, 2013.
[8] S. Zhou. Gemini: Graph estimation with matrix variate normal instances. Annals of Statistics, 42:532-562, 2014.
[9] S. He, J. Yin, H. Li, and X. Wang. Graphical model selection and estimation for high dimensional tensor data. Journal of Multivariate Analysis, 128:165-185, 2014.
[10] P. Jain, P. Netrapalli, and S. Sanghavi. Low-rank matrix completion using alternating minimization. In Symposium on Theory of Computing, pages 665-674, 2013.
[11] P. Netrapalli, P. Jain, and S. Sanghavi. Phase retrieval using alternating minimization. In Advances in Neural Information Processing Systems, pages 2796-2804, 2013.
[12] J. Sun, Q. Qu, and J. Wright. Complete dictionary recovery over the sphere. arXiv:1504.06785, 2015. [13] S. Arora, R. Ge, T. Ma, and A. Moitra. Simple, efficient, and neural algorithms for sparse coding.
arXiv:1503.00778, 2015. [14] A. Anandkumar, R. Ge, D. Hsu, S. Kakade, and M. Telgarsky. Tensor decompositions for learning latent
variable models. Journal of Machine Learning Research, 15:2773-2832, 2014. [15] W. Sun, J. Lu, H. Liu, and G. Cheng. Provable sparse tensor decomposition. arXiv:1502.01425, 2015. [16] S. Zhe, Z. Xu, X. Chu, Y. Qi, and Y. Park. Scalable nonparametric multiway data analysis. In International
Conference on Artificial Intelligence and Statistics, 2015. [17] S. Zhe, Z. Xu, Y. Qi, and P. Yu. Sparse bayesian multiview learning for simultaneous association discovery
and diagnosis of alzheimer's disease. In Twenty-Ninth AAAI Conference on Artificial Intelligence, 2015. [18] T. Kolda and B. Bader. Tensor decompositions and applications. SIAM Review, 51:455-500, 2009. [19] R. Tibshirani. Regression shrinkage and selection via the Lasso. Journal of the Royal Statistical Society,
Series B, 58:267-288, 1996. [20] M. Yuan and Y. Lin. Model selection and estimation in the gaussian graphical model. Biometrika, 94:19-35,
2007. [21] J. Friedman, H. Hastie, and R. Tibshirani. Sparse inverse covariance estimation with the graphical Lasso.
Biostatistics, 9:432-441, 2008. [22] A. J. Rothman, P. J. Bickel, E. Levina, and J. Zhu. Sparse permutation invariant covariance estimation.
Electronic Journal of Statistics, 2:494-515, 2008. [23] W. Sun, J. Wang, and Y. Fang. Consistent selection of tuning parameters via variable selection stability.
Journal of Machine Learning Research, 14:3419-3440, 2013. [24] M. Ledoux and M. Talagrand. Probability in Banach Spaces: Isoperimetry and Processes. Springer, 2011. [25] J. Fan, Y. Feng, and Y. Wu. Network exploration via the adaptive Lasso and scad penalties. Annals of
Statistics, 3:521-541, 2009. [26] P. Zhao and B. Yu. On model selection consistency of Lasso. Journal of Machine Learning Research,
7:2541-2567, 2006. [27] P. Ravikumar, M.J. Wainwright, G. Raskutti, and B. Yu. High-dimensional covariance estimation by
minimizing 1-penalized log-determinant divergence. Electronic Journal of Statistics, 5:935-980, 2011. [28] Z. Wang, H. Liu, and T. Zhang. Optimal computational and statistical rates of convergence for sparse
nonconvex learning problems. Annals of Statistics, 42:2164-2201, 2014. [29] T. Zhao, H. Liu, K. Roeder, J. Lafferty, and L. Wasserman. The huge package for high-dimensional
undirected graph estimation in R. Journal of Machine Learning Research, 13:1059-1062, 2012. [30] A. Gupta and D. Nagar. Matrix variate distributions. Chapman and Hall/CRC Press, 2000. [31] P. Hoff. Separable covariance arrays via the Tucker product, with applications to multivariate relational
data. Bayesian Analysis, 6:179-196, 2011. [32] A.P. Dawid. Some matrix-variate distribution theory: Notational considerations and a bayesian application.
Biometrika, 68:265-274, 1981. [33] S. Negahban and M.J. Wainwright. Estimation of (near) low-rank matrices with noise and high-dimensional
scaling. Annals of Statistics, 39:1069-1097, 2011.
9

